---
backend:
  enabled: true
  service:
    frontend:
      port: 80

postgres:
  enabled: true
  auth:
    password: &psqlPassword "psql_password"
    username: &psqlUsername "postgresql_sandbox_user"
    database: "edc"
  persistence:
    enabled: true

dataplane:
  enabled: true
  image:
    repository: ghcr.io/catenax-ng/product-edc/edc-dataplane-hashicorp-vault
    tag: latest
    pullPolicy: Always
  edc:
    endpoints:
      default:
        port: 8080
        path: /dataplane/api
      public:
        port: 8185
        path: /dataplane/api/public
      control:
        port: 9999
        path: /dataplane/api/control
      metrics:
        port: 9090
        path: /dataplane/metrics
  ingresses:
    - enabled: true
      hostname: "{{ .Release.Name }}.dev.catena-x.net"
      endpoints:
        - default
        - public
        - control
        - metrics
      className: "nginx"
      # -- Enables TLS on the ingress resource
      tls: true
  opentelemetry:
    properties: |-
      otel.javaagent.enabled=false
      otel.javaagent.debug=false
  env:
    # see extension https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/tree/main/extensions/data-plane/data-plane-api
    EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: "http://{{ .Release.Name }}-controlplane:8182/validation/token"
    EDC_VAULT_HASHICORP_URL: http://vault:8200
    EDC_VAULT_HASHICORP_TOKEN: token
    EDC_VAULT_HASHICORP_API_SECRET_PATH: /v1/secret
    EDC_VAULT_HASHICORP_API_HEALTH_CHECK_PATH: /v1/sys/health
    EDC_VAULT_HASHICORP_HEALTH_CHECK_STANDBY_OK: "true"

controlplane:
  enabled: true
  image:
    repository: ghcr.io/catenax-ng/product-edc/edc-controlplane-postgresql-hashicorp-vault
    tag: latest
    pullPolicy: Always
  edc:
    endpoints:
      default:
        port: 8080
        path: /controlplane/api
      data:
        port: 8181
        path: /controlplane/data
      validation:
        port: 8182
        path: /controlplane/validation
      control:
        port: 9999
        path: /controlplane/api/control
      ids:
        port: 8282
        path: /api/v1/ids
      metrics:
        port: 9090
        path: /controlplane/metrics
  ingresses:
    - enabled: true
      hostname: "{{ .Release.Name }}.dev.catena-x.net"
      endpoints:
        - default
        - data
        - validation
        - control
        - ids
        - metrics
      className: "nginx"
      tls: true
  opentelemetry:
    properties: |-
      otel.javaagent.enabled=false
      otel.javaagent.debug=false
  env:
    EDC_OAUTH_CLIENT_ID: oauth client id
    EDC_OAUTH_PROVIDER_JWKS_URL: "http://daps:4567/jwks.json"
    EDC_OAUTH_TOKEN_URL: "http://daps:4567/token"
    EDC_OAUTH_PRIVATE_KEY_ALIAS: vault private key alias
    EDC_OAUTH_PUBLIC_KEY_ALIAS: vault certificate alias
    EDC_OAUTH_PROVIDER_AUDIENCE: idsc:IDS_CONNECTORS_ALL
    IDS_WEBHOOK_ADDRESS: "https://{{ .Release.Name }}.dev.catena-x.net/api/v1/ids"
    EDC_IDS_ENDPOINT: "https://{{ .Release.Name }}.dev.catena-x.net/api/v1/ids"
    EDC_IDS_DESCRIPTION: "{{ .Release.Name }} EDC Control Plane"
    EDC_DATASOURCE_ASSET_NAME: asset
    EDC_DATASOURCE_ASSET_USER: *psqlUsername
    EDC_DATASOURCE_ASSET_URL: &psqlJdbcUrl "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/edc"
    EDC_DATASOURCE_CONTRACTDEFINITION_NAME: contractdefinition
    EDC_DATASOURCE_CONTRACTDEFINITION_USER: *psqlUsername
    EDC_DATASOURCE_CONTRACTDEFINITION_URL: *psqlJdbcUrl
    EDC_DATASOURCE_CONTRACTNEGOTIATION_NAME: contractnegotiation
    EDC_DATASOURCE_CONTRACTNEGOTIATION_USER: *psqlUsername
    EDC_DATASOURCE_CONTRACTNEGOTIATION_URL: *psqlJdbcUrl
    EDC_DATASOURCE_POLICY_NAME: policy
    EDC_DATASOURCE_POLICY_USER: *psqlUsername
    EDC_DATASOURCE_POLICY_URL: *psqlJdbcUrl
    EDC_DATASOURCE_TRANSFERPROCESS_NAME: transferprocess
    EDC_DATASOURCE_TRANSFERPROCESS_USER: *psqlUsername
    EDC_DATASOURCE_TRANSFERPROCESS_URL: *psqlJdbcUrl
    EDC_DATAPLANE_SELECTOR_HTTPPROXY_URL: http://{{ .Release.Name }}-dataplane:9999/api/dataplane/control
    EDC_DATAPLANE_SELECTOR_HTTPPROXY_SOURCETYPES : HttpData
    EDC_DATAPLANE_SELECTOR_HTTPPROXY_DESTINATIONTYPES: HttpProxy
    EDC_DATAPLANE_SELECTOR_HTTPPROXY_PROPERTIES: >-
      {
        "publicApiUrl": "https://{{ .Release.Name }}.dev.catena-x.net/dataplane/api/public"
      }
    EDC_TRANSFER_PROXY_ENDPOINT: http://{{ .Release.Name }}-dataplane:8185/dataplane/api/public
    EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS: vault token signer private key
    EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS: vault token signer public key
    EDC_RECEIVER_HTTP_ENDPOINT: http://backend
    EDC_VAULT_HASHICORP_URL: http://vault:8200
    EDC_VAULT_HASHICORP_TOKEN: token
    EDC_VAULT_HASHICORP_API_SECRET_PATH: /v1/secret
    EDC_VAULT_HASHICORP_API_HEALTH_CHECK_PATH: /v1/sys/health
    EDC_VAULT_HASHICORP_HEALTH_CHECK_STANDBY_OK: "true"
    EDC_API_AUTH_KEY: *psqlPassword
    EDC_DATASOURCE_ASSET_PASSWORD: *psqlPassword
    EDC_DATASOURCE_CONTRACTDEFINITION_PASSWORD: *psqlPassword
    EDC_DATASOURCE_CONTRACTNEGOTIATION_PASSWORD: *psqlPassword
    EDC_DATASOURCE_POLICY_PASSWORD: *psqlPassword
    EDC_DATASOURCE_TRANSFERPROCESS_PASSWORD: *psqlPassword
