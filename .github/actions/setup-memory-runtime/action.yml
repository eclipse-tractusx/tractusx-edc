#################################################################################
#  Copyright (c) 2024 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
name: "Setup TractusX EDC in memory runtime"
description: "Setup TractusX EDC in memory runtime"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-java

    - uses: actions/checkout@v4

    - name: Dockerize TractusX EDC in memory distribution
      shell: bash
      run: |
        ./gradlew :edc-controlplane:edc-runtime-memory:dockerize

    - name: Starting MIW, Keycloak and Postgres Servers
      shell: bash
      run: |
        cd edc-tests/miw-tests/src/test/resources/docker-environment
        docker compose up -d --wait

    - uses: nick-fields/retry@v3
      name: Wait for MIW
      with:
        timeout_minutes: 5
        max_attempts: 3
        command: |
          code=$(curl -IL -sw "%{http_code}" http://localhost:8000/api/actuator/health -o /dev/null)
          if [ "$code" -ne "401" ]; then
            echo "MIW not ready yet, status = $code"
            exit 1;
          fi   

    - name: Starting in memory TractusX EDC
      shell: bash
      run: |
        cd dast
        docker compose up -d 


    - uses: nick-fields/retry@v3
      name: Wait for TractusX EDC
      with:
        timeout_minutes: 5
        max_attempts: 3
        command: |
          code=$(curl -IL -sw "%{http_code}" http://localhost:8181/api/check/health -o /dev/null)
          if [ "$code" -ne "401" ]; then
            echo "TractusX EDC not ready yet, status = $code"
            docker logs dast-edc-runtime-1
            exit 1;
          fi