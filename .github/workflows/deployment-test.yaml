#
#  Copyright (c) 2023 Mercedes-Benz Tech Innovation GmbH
#  Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#

---
name: "Deployment Tests"

on:
  push:
    branches:
      - main
      - develop
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  release:
    types:
      - published
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  secret-presence:
    runs-on: ubuntu-latest
    outputs:
      VAULT_SECRETS: ${{ steps.secret-presence.outputs.VAULT_SECRETS }}
    steps:
      - name: Check whether secrets exist
        id: secret-presence
        run: |
          [ ! -z "${{ secrets.VAULT_SECRETS }}" ] && echo "::set-output name=VAULT_SECRETS::true"
          exit 0
  deployment-test-inmem:
    runs-on: ubuntu-latest
    needs: [ secret-presence ]
    if: |
      needs.secret-presence.outputs.VAULT_SECRETS
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Cache ContainerD Image Layers
        uses: actions/cache@v3
        with:
          path: /var/lib/containerd/io.containerd.snapshotter.v1.overlayfs
          key: ${{ runner.os }}-io.containerd.snapshotter.v1.overlayfs

      - name: Set up JDK 11
        uses: actions/setup-java@v3.11.0
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build docker images
        run: |-
          ./gradlew :edc-controlplane:edc-runtime-memory:dockerize

      - name: Setup Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.8.1

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3.2

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.5.0

      - name: Load images into KinD
        run: |
          kind get clusters | xargs -n1 kind load docker-image edc-runtime-memory:latest --name

      ###################################################
      # Install example variant of the in-memory runtime
      ###################################################
      - name: Install DAPS
        shell: bash
        run: |-
          helm install infra edc-tests/cucumber/src/main/resources/deployment/helm/supporting-infrastructure \
          --set install.postgresql=false \
          --set install.vault=false \
          --set install.minio=false --wait-for-jobs --timeout=30s --dependency-update

      - name: Install In-Mem Runtime
        shell: bash
        run: |-
          helm install tx-inmem charts/tractusx-connector-memory \
          -f charts/tractusx-connector-memory/example.yaml \
          --set vault.secrets="${{ secrets.VAULT_SECRETS }}" \
          --wait-for-jobs --timeout=120s
          
          # wait for the pod to become ready
          # kubectl wait --for=condition=ready pod -l app.kubernetes.io/instance=tx-inmem-runtime --timeout=600s || ( kubectl logs -l app.kubernetes.io/instance=tx-inmem-runtime --tail 500 && exit 1 )
          kubectl rollout status deployment tx-inmem
          
          # execute the helm test
          helm test tx-inmem
          

      #################
      ### Tear Down ###
      #################
      - name: Destroy the kind cluster
        if: always()
        run: >-
          kind get clusters | xargs -n1 kind delete cluster --name