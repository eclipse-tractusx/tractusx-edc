#################################################################################
#  Copyright (c) 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
name: "Publish Maven Artefacts to OSSRH"

on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: 'a semver string denoting the version. Append -SNAPSHOT for snapshots. If omitted, the version is taken from gradle.properties'
  workflow_call:
    inputs:
      version:
        type: string
        required: false
        description: 'a semver string denoting the version. Append -SNAPSHOT for snapshots. If omitted, the version is taken from gradle.properties'

jobs:
  maven-release:
    name: 'Publish all artefacts to Sonatype/MavenCentral'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      # Set-Up
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-java

      # Import GPG Key
      - uses: ./.github/actions/import-gpg-key
        name: "Import GPG Key"
        with:
          gpg-private-key: ${{ secrets.ORG_GPG_PRIVATE_KEY }}

      # publish releases
      - name: Publish version
        env:
          OSSRH_PASSWORD: ${{ secrets.ORG_OSSRH_PASSWORD }}
          OSSRH_USER: ${{ secrets.ORG_OSSRH_USERNAME }}
        run: |-
          
          echo "Input Version: ${{ inputs.version }}"

          # check if version input was specified, else read from gradle.properties 
          
          if [ ! -z ${{ inputs.version }} ];
          then
            VERSION=${{ inputs.version }}
            echo "Publishing using version from parameter: $VERSION"
          else
            VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
            echo "Publishing using version from gradle.properties: $VERSION"
          fi
          
          # check if the version is a SNAPSHOT, and if not, append command to close staging repo
          
          cmd=""
          if [[ $VERSION != *-SNAPSHOT ]]
          then
            cmd="closeAndReleaseSonatypeStagingRepository";
          fi
          echo "Publishing Version $VERSION to Sonatype"
          
          ./gradlew publishToSonatype ${cmd} --no-parallel -Pversion=$VERSION -Psigning.gnupg.executable=gpg -Psigning.gnupg.passphrase="${{ secrets.ORG_GPG_PASSPHRASE }}"
