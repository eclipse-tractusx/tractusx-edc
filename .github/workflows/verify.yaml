#################################################################################
#  Copyright (c) 2023 Mercedes-Benz Tech Innovation GmbH
#  Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
name: "Verify"

on:
  workflow_call:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  
  verify-license-headers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Check for files without a license header"
        run: |-
          # checks all java, yaml, kts and sql files for an Apache 2.0 license header
          cmd="grep -riL \"SPDX-License-Identifier: Apache-2.0\" --include=\*.{java,yaml,yml,kts,sql} --exclude-dir={.gradle,\*\openapi} ."
          violations=$(eval $cmd | wc -l)
          if [[ $violations -ne 0 ]] ; then
            echo "$violations files without license headers were found:";
            eval $cmd;
            exit 1;
          fi

  verify-helm-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: addnab/docker-run-action@v3
        with:
          image: jnorwood/helm-docs:v1.10.0
          options: -v ${{ github.workspace }}/charts:/helm-docs
          run: helm-docs

      - run: |
          if $(git diff --quiet --exit-code); then
            echo "Helm chart docs up to date"
          else
            echo "Helm chart docs not up to date:"
            git diff
            exit 1
          fi

  verify-dependencies:
    uses: eclipse-edc/.github/.github/workflows/dependency-check.yml@main
  
  verify-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-java
      - name: Run Checkstyle
        run: |
          ./gradlew checkstyleMain checkstyleTest

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-java

      - name: Run Unit tests
        run: ./gradlew test

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-java

      - name: Run Integration tests
        run: ./gradlew test -DincludeTags="ComponentTest"

  api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-java

      - name: Run API tests
        run: ./gradlew test -DincludeTags="ApiTest"

  end-to-end-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant: [ { dir: edc-tests/edc-controlplane/catalog-tests },
                   { dir: edc-tests/edc-controlplane/edr-api-tests },
                   { dir: edc-tests/edc-controlplane/iatp-tests },
                   { dir: edc-tests/edc-controlplane/policy-tests },
                   { dir: edc-tests/edc-controlplane/transfer-tests },
                   { dir: edc-tests/edc-dataplane/edc-dataplane-tokenrefresh-tests }
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-java

      - name: Run E2E tests (${{ matrix.variant.dir }})
        run: |
          ./gradlew compileJava compileTestJava
          ./gradlew -p ${{ matrix.variant.dir }} test -DincludeTags="EndToEndTest"

  postgres-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.2
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-java

      - name: Run Postgresql E2E tests
        run: ./gradlew test -DincludeTags="PostgresqlIntegrationTest"

  dataplane-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-java

      - name: Run Azure/S3 dataplane tests
        run: |
          ./gradlew compileJava compileTestJava
          ./gradlew -p edc-tests/edc-dataplane test -DincludeTags="AzureCosmosDbIntegrationTest,AwsS3IntegrationTest"
