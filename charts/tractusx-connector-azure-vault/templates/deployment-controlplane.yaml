#
  #  Copyright (c) 2023 ZF Friedrichshafen AG
  #  Copyright (c) 2023 Mercedes-Benz Tech Innovation GmbH
  #  Copyright (c) 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
  #  Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
  #
  #  See the NOTICE file(s) distributed with this work for additional
  #  information regarding copyright ownership.
  #
  #  This program and the accompanying materials are made available under the
  #  terms of the Apache License, Version 2.0 which is available at
  #  https://www.apache.org/licenses/LICENSE-2.0
  #
  #  Unless required by applicable law or agreed to in writing, software
  #  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  #  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  #  License for the specific language governing permissions and limitations
  #  under the License.
  #
  #  SPDX-License-Identifier: Apache-2.0
  #

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "txdc.fullname" . }}-controlplane
  labels:
    {{- include "txdc.controlplane.labels" . | nindent 4 }}
spec:
  {{- if not .Values.controlplane.autoscaling.enabled }}
  replicas: {{ .Values.controlplane.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "txdc.controlplane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controlplane.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "txdc.controlplane.selectorLabels" . | nindent 8 }}
        {{- with .Values.controlplane.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "txdc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controlplane.podSecurityContext | nindent 8 }}
      initContainers:
        {{- toYaml .Values.controlplane.initContainers | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.controlplane.securityContext | nindent 12 }}

          # either use the specified image, or use the default one
          {{- if .Values.controlplane.image.repository }}
          image: "{{ .Values.controlplane.image.repository }}:{{ .Values.controlplane.image.tag | default .Chart.AppVersion }}"
          {{- else }}
          image: "tractusx/edc-controlplane-postgresql-azure-vault:{{ .Values.controlplane.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.controlplane.image.pullPolicy }}
          ports:
          {{- range $key,$value := .Values.controlplane.endpoints }}
            - name: {{ $key }}
              containerPort: {{ $value.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.controlplane.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.controlplane.endpoints.default.path }}/check/liveness
              port: {{ .Values.controlplane.endpoints.default.port }}
            initialDelaySeconds: {{ .Values.controlplane.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.controlplane.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.controlplane.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.controlplane.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.controlplane.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.controlplane.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.controlplane.endpoints.default.path }}/check/readiness
              port: {{ .Values.controlplane.endpoints.default.port }}
            initialDelaySeconds: {{ .Values.controlplane.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.controlplane.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.controlplane.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.controlplane.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.controlplane.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.controlplane.resources | nindent 12 }}
          env:
          {{- if .Values.controlplane.debug.enabled }}
            - name: "JAVA_TOOL_OPTIONS"
            {{- if .Values.controlplane.debug.suspendOnStart }}
              value: >-
                {{ printf "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=%v" .Values.controlplane.debug.port }}
            {{- else }}
              value: >-
                {{ printf "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=%v" .Values.controlplane.debug.port }}
            {{- end }}
          {{- end }}

            ########################
            ## ID CONFIGURATION ##
            ########################
            - name: EDC_PARTICIPANT_ID
              value: {{ .Values.participant.id | required ".Values.participant.id is required" | quote }}

            ##########################
            # SSI / MIW CONFIGURATION
            ##########################
            - name: "TX_SSI_MIW_URL"
              value: {{ .Values.controlplane.ssi.miw.url | quote }}
            - name: "TX_SSI_MIW_AUTHORITY_ID"
              value: {{ .Values.controlplane.ssi.miw.authorityId | quote }}
            - name: "TX_SSI_OAUTH_TOKEN_URL"
              value: {{ .Values.controlplane.ssi.oauth.tokenurl | quote }}
            - name: "TX_SSI_OAUTH_CLIENT_ID"
              value: {{ .Values.controlplane.ssi.oauth.client.id | quote }}
            - name: "TX_SSI_OAUTH_CLIENT_SECRET_ALIAS"
              value: {{ .Values.controlplane.ssi.oauth.client.secretAlias | quote }}
            - name: "TX_SSI_ENDPOINT_AUDIENCE"
              value: {{ printf "%s%s" (include "txdc.controlplane.url.protocol" .) .Values.controlplane.endpoints.protocol.path | quote }}

            #######
            # API #
            #######
            - name: "EDC_API_AUTH_KEY"
              value: {{ .Values.controlplane.endpoints.management.authKey | required ".Values.controlplane.endpoints.mangement.authKey is required" | quote }}
            - name: "WEB_HTTP_DEFAULT_PORT"
              value: {{ .Values.controlplane.endpoints.default.port | quote }}
            - name: "WEB_HTTP_DEFAULT_PATH"
              value: {{ .Values.controlplane.endpoints.default.path | quote }}
            - name: "WEB_HTTP_MANAGEMENT_PORT"
              value: {{ .Values.controlplane.endpoints.management.port | quote }}
            - name: "WEB_HTTP_MANAGEMENT_PATH"
              value: {{ .Values.controlplane.endpoints.management.path | quote }}
            - name: "WEB_HTTP_CONTROL_PORT"
              value: {{ .Values.controlplane.endpoints.control.port | quote }}
            - name: "WEB_HTTP_CONTROL_PATH"
              value: {{ .Values.controlplane.endpoints.control.path | quote }}
            - name: "WEB_HTTP_PROTOCOL_PORT"
              value: {{ .Values.controlplane.endpoints.protocol.port | quote }}
            - name: "WEB_HTTP_PROTOCOL_PATH"
              value: {{ .Values.controlplane.endpoints.protocol.path | quote }}

            #########
            ## DSP ##
            #########

            - name: "EDC_DSP_CALLBACK_ADDRESS"
              value: {{ printf "%s%s" (include "txdc.controlplane.url.protocol" .) .Values.controlplane.endpoints.protocol.path | quote }}
            - name: "EDC_OAUTH_PROVIDER_AUDIENCE"
              value: "idsc:IDS_CONNECTORS_ALL"
            - name: "EDC_OAUTH_ENDPOINT_AUDIENCE"
              value: {{ printf "%s%s" (include "txdc.controlplane.url.protocol" . ) .Values.controlplane.endpoints.protocol.path | quote }}

            ################
            ## POSTGRESQL ##
            ################

            # see extension https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/store/sql/asset-index-sql
            - name: "EDC_DATASOURCE_ASSET_NAME"
              value: "asset"
            - name: "EDC_DATASOURCE_ASSET_USER"
              value: {{ .Values.postgresql.auth.username | required ".Values.postgresql.auth.username is required" | quote }}
            - name: "EDC_DATASOURCE_ASSET_PASSWORD"
              value: {{ .Values.postgresql.auth.password | required ".Values.postgresql.auth.password is required" | quote }}
            - name: "EDC_DATASOURCE_ASSET_URL"
              value: {{ tpl .Values.postgresql.jdbcUrl . | quote }}

            # see extension https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/store/sql/contract-definition-store-sql
            - name: "EDC_DATASOURCE_CONTRACTDEFINITION_NAME"
              value: "contractdefinition"
            - name: "EDC_DATASOURCE_CONTRACTDEFINITION_USER"
              value: {{ .Values.postgresql.auth.username | required ".Values.postgresql.auth.username is required" | quote }}
            - name: "EDC_DATASOURCE_CONTRACTDEFINITION_PASSWORD"
              value: {{ .Values.postgresql.auth.password | required ".Values.postgresql.auth.password is required" | quote }}
            - name: "EDC_DATASOURCE_CONTRACTDEFINITION_URL"
              value: {{ tpl .Values.postgresql.jdbcUrl . | quote }}

            # see extension https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/store/sql/contract-negotiation-store-sql
            - name: "EDC_DATASOURCE_CONTRACTNEGOTIATION_NAME"
              value: "contractnegotiation"
            - name: "EDC_DATASOURCE_CONTRACTNEGOTIATION_USER"
              value: {{ .Values.postgresql.auth.username | required ".Values.postgresql.auth.username is required" | quote }}
            - name: "EDC_DATASOURCE_CONTRACTNEGOTIATION_PASSWORD"
              value: {{ .Values.postgresql.auth.password | required ".Values.postgresql.auth.password is required" | quote }}
            - name: "EDC_DATASOURCE_CONTRACTNEGOTIATION_URL"
              value: {{ tpl .Values.postgresql.jdbcUrl . | quote }}

            # see extension https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/store/sql/policy-store-sql
            - name: "EDC_DATASOURCE_POLICY_NAME"
              value: "policy"
            - name: "EDC_DATASOURCE_POLICY_USER"
              value: {{ .Values.postgresql.auth.username | required ".Values.postgresql.auth.username is required" | quote }}
            - name: "EDC_DATASOURCE_POLICY_PASSWORD"
              value: {{ .Values.postgresql.auth.password | required ".Values.postgresql.auth.password is required" | quote }}
            - name: "EDC_DATASOURCE_POLICY_URL"
              value: {{ tpl .Values.postgresql.jdbcUrl . | quote }}

            # see extension https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/store/sql/transfer-process-store-sql
            - name: "EDC_DATASOURCE_TRANSFERPROCESS_NAME"
              value: "transferprocess"
            - name: "EDC_DATASOURCE_TRANSFERPROCESS_USER"
              value: {{ .Values.postgresql.auth.username | required ".Values.postgresql.auth.username is required" | quote }}
            - name: "EDC_DATASOURCE_TRANSFERPROCESS_PASSWORD"
              value: {{ .Values.postgresql.auth.password | required ".Values.postgresql.auth.password is required" | quote }}
            - name: "EDC_DATASOURCE_TRANSFERPROCESS_URL"
              value: {{ tpl .Values.postgresql.jdbcUrl . | quote }}

            # see extension https://github.com/eclipse-tractusx/tractusx-edc/tree/main/edc-extensions/edr-cache-sql
            - name: "EDC_DATASOURCE_EDR_NAME"
              value: "edr"
            - name: "EDC_DATASOURCE_EDR_USER"
              value: {{ .Values.postgresql.auth.username | required ".Values.postgresql.auth.username is required" | quote }}
            - name: "EDC_DATASOURCE_EDR_PASSWORD"
              value: {{ .Values.postgresql.auth.password | required ".Values.postgresql.auth.password is required" | quote }}
            - name: "EDC_DATASOURCE_EDR_URL"
              value: {{ tpl .Values.postgresql.jdbcUrl . | quote }}

            ################
            ## DATA PLANE ##
            ################

            # see extension https://github.com/eclipse-tractusx/tractusx-edc/tree/main/edc-extensions/dataplane-selector-configuration
            - name: "EDC_DATAPLANE_SELECTOR_DEFAULTPLANE_URL"
              value: {{ include "txdc.dataplane.url.control" . }}/transfer
            - name: "EDC_DATAPLANE_SELECTOR_DEFAULTPLANE_SOURCETYPES"
              value: "HttpData,AmazonS3"
            - name: "EDC_DATAPLANE_SELECTOR_DEFAULTPLANE_DESTINATIONTYPES"
              value: "HttpProxy,AmazonS3"
            - name: "EDC_DATAPLANE_SELECTOR_DEFAULTPLANE_PROPERTIES"
              value: |-
                {{ printf "{ \"publicApiUrl\": \"%s\" }" (include "txdc.dataplane.url.public" . ) }}

            # see extension https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/data-plane-transfer
            - name: "EDC_TRANSFER_PROXY_ENDPOINT"
              value: {{ include "txdc.dataplane.url.public" . }}
            {{- if .Values.vault.secretNames.transferProxyTokenSignerPrivateKey }}
            - name: "EDC_TRANSFER_PROXY_TOKEN_SIGNER_PRIVATEKEY_ALIAS"
              value: {{ .Values.vault.secretNames.transferProxyTokenSignerPrivateKey | quote }}
            {{- end }}
            {{- if .Values.vault.secretNames.transferProxyTokenSignerPublicKey }}
            - name: "EDC_TRANSFER_PROXY_TOKEN_VERIFIER_PUBLICKEY_ALIAS"
              value: {{ .Values.vault.secretNames.transferProxyTokenSignerPublicKey | quote }}
            {{- end }}

            # see extension https://github.com/eclipse-edc/Connector/tree/main/extensions/control-plane/transfer/transfer-pull-http-dynamic-receiver

            - name: "EDC_RECEIVER_HTTP_DYNAMIC_ENDPOINT"
              value: {{ .Values.backendService.httpProxyTokenReceiverUrl | required ".Values.backendService.httpProxyTokenReceiverUrl is required" | quote }}

            ###########
            ## VAULT ##
            ###########

            - name: "EDC_VAULT_CLIENTID"
              value: {{ .Values.vault.azure.client | required ".Values.vault.azure.client is required" | quote  }}
            - name: "EDC_VAULT_TENANTID"
              value: {{ .Values.vault.azure.tenant | required ".Values.vault.azure.tenant is required" | quote }}
            - name: "EDC_VAULT_NAME"
              value: {{ .Values.vault.azure.name | required ".Values.vault.azure.name is required" | quote }}
            # only set the env var if config value not null
            {{- if .Values.vault.azure.secret }}
            - name: "EDC_VAULT_CLIENTSECRET"
              value: {{ .Values.vault.azure.secret | quote }}
             {{- end }}
            # only set the env var if config value not null
            {{- if .Values.vault.azure.certificate }}
            - name: "EDC_VAULT_CERTIFICATE"
              value: {{ .Values.vault.azure.certificate | quote }}
            {{- end }}

            #####################
            ## DATA ENCRYPTION ##
            #####################

            # see extension https://github.com/eclipse-tractusx/tractusx-edc/tree/main/edc-extensions/data-encryption
            - name: "EDC_DATA_ENCRYPTION_KEYS_ALIAS"
              value: {{ .Values.vault.secretNames.transferProxyTokenEncryptionAesKey | quote }}
            - name: "EDC_DATA_ENCRYPTION_ALGORITHM"
              value: "AES"

            ###########################
            ## AAS WRAPPER EXTENSION ##
            ###########################
            - name: "EDC_CP_ADAPTER_CACHE_CATALOG_EXPIRE_AFTER"
              value: "0"
            - name: "EDC_CP_ADAPTER_REUSE_CONTRACT_AGREEMENT"
              value: "0"

            ###########################
            ## BUSINESS PARTNER NUMBER VALIDATION EXTENSION ##
            ###########################
            - name: "TRACTUSX_BUSINESSPARTNERVALIDATION_LOG_AGREEMENT_VALIDATION"
              value: {{ .Values.controlplane.businessPartnerValidation.log.agreementValidation | quote }}

            ######################################
            ## Additional environment variables ##
            ######################################
            - name: "EDC_CONNECTOR_NAME"
              value: {{ include "txdc.fullname" .}}-controlplane
          {{- range $key, $value := .Values.controlplane.envValueFrom }}
            - name: {{ $key | quote }}
              valueFrom:
                {{- tpl (toYaml $value) $ | nindent 16 }}
          {{- end }}
          {{- range $key, $value := .Values.controlplane.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
          {{- end }}
          {{- if and (or .Values.controlplane.envSecretNames .Values.controlplane.envConfigMapNames) (or (gt (len .Values.controlplane.envSecretNames) 0) (gt (len .Values.controlplane.envConfigMapNames) 0)) }}
          envFrom:
          {{- range $value := .Values.controlplane.envSecretNames }}
            - secretRef:
                name: {{ $value | quote }}
          {{- end }}
          {{- range $value := .Values.controlplane.envConfigMapNames }}
            - configMapRef:
                name: {{ $value | quote }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: "configuration"
              mountPath: "/app/opentelemetry.properties"
              subPath: "opentelemetry.properties"
            - name: "configuration"
              mountPath: "/app/logging.properties"
              subPath: "logging.properties"
            - name: "tmp"
              mountPath: "/tmp"
      volumes:
        - name: "configuration"
          configMap:
            name: {{ include "txdc.fullname" . }}-controlplane
            items:
              - key: "opentelemetry.properties"
                path: "opentelemetry.properties"
              - key: "logging.properties"
                path: "logging.properties"
        - name: "tmp"
          emptyDir: { }
      {{- with .Values.controlplane.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlplane.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlplane.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
